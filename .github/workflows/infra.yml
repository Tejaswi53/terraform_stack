name: Terraform Deploy or Destroy

on:
  pull_request:
    branches: [ "stage" ]
  workflow_dispatch:
    inputs:
      customer:
        description: 'Customer name (e.g., customer1)'
        required: true
        type: string

      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - apply
          - destroy

      environment:
        description: 'Environment to deploy to (e.g., dev, staging, prod)'
        required: true
        type: string

      confirm_destroy:
        description: 'Type "CONFIRM" to allow destroy (case-sensitive)'
        required: false
        default: ''

env:
  AWS_REGION: us-west-2

jobs:
  terraform:
    name: Terraform ${{ inputs.action }} on ${{ inputs.customer }} / ${{ inputs.environment }}
    runs-on: ubuntu-latest

    # ðŸ”’ Apply environment only for `destroy` to trigger approval
    environment: ${{ inputs.action == 'destroy' && inputs.environment || '' }}

    # ðŸ›‘ Only allow destroy if confirmation is typed
    if: ${{ inputs.action != 'destroy' || inputs.confirm_destroy == 'CONFIRM' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        working-directory: stacks/${{ inputs.customer }}
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: stacks/${{ inputs.customer }}
        run: terraform init -input=false

      - name: Terraform Validate
        if: ${{ inputs.action == 'apply' }}
        working-directory: stacks/${{ inputs.customer }}
        run: terraform validate

      - name: Terraform Plan
        if: ${{ inputs.action == 'apply' }}
        working-directory: stacks/${{ inputs.customer }}
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        if: ${{ inputs.action == 'apply' }}
        working-directory: stacks/${{ inputs.customer }}
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Destroy
        if: ${{ inputs.action == 'destroy' }}
        working-directory: stacks/${{ inputs.customer }}
        run: terraform destroy -auto-approve
